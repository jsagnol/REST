<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Custom.TRAKDischSummary1">
<Description>
Disch Summary 6</Description>
<ClassType/>
<ProcedureBlock>0</ProcedureBlock>
<Super>%Library.RegisteredObject</Super>
<TimeCreated>61221,1748.07682</TimeCreated>

<Parameter name="SrcVer">
<Description>
Location and Revision of this file in Perforce (Auto-updating)</Description>
<Default>$Id: //custom_ccrs/au/AUSW/T2016/BASE/cls/Custom/TRAKDischSummary1.xml#1 $</Default>
</Parameter>

<Method name="TRAKDischSummary1Close">
<Description>
This is the Close component of the %Library.Query.
This is standard code and should never have to change.
This is where all the cleanup is performed, i.e. the purging of the temporary storage global ^CacheTemp.</Description>
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>QHandle:%Library.Binary</FormalSpec>
<Private>0</Private>
<ReturnType>%Library.Status</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 // Clean up by purging the temporary node in ^CacheTemp global
 New repid
 Set repid=$li(QHandle,2)
 Kill ^CacheTemp(repid)
 Quit $$$OK
]]></Implementation>
</Method>

<Method name="TRAKDischSummary1Execute">
<Description>
This is the Execute section for the %Library.Query. 
All of the logic will be performed here.
A new node for the ^CacheTemp global will be created and each subscript of this global will contain
a row for the report.</Description>
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec><![CDATA[&QHandle:%Library.Binary,DisID:%Integer,reptype:%String,DocID:%String,ClinID:%String]]></FormalSpec>
<Private>0</Private>
<ReturnType>%Library.Status</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
	//{Call Custom.SWARHMTED018_TRAKDischSummary1()}
 k ^zbernard, ^zwsa
 // Get reportid i.e. use $INCREMENT to add another node to ^CacheTemp global. 
 // We use ^CacheTemp global because it will always use memory before disk
 New repid,ind

 // Use $Increment to get the next node
 Set repid=$I(^CacheTemp)

 // Build data into ^CacheTemp(ReportID)
 // e.g. Set ^CacheTemp(ReportID,Index)=$LB(f1,f2,f3)
 New Number,String,Date,Time,c,n,str,END
 n PAADMRowId1,PAADMADMNo,CTPCPDesc,PAADMAdmDate,PAADMDischgDate,HOSPDesc,DISProcedures,DISActiveProblems,PAADMAdmTime,PAADMDischgTime,PAPMIRowId,PAPMIDOB,PAPMIName,PAPMIName2,PAPMIName3,PAPMINo,PAPERTelH,DISProgressNotes,PAPERStName,PAPERForeignAddress,CTZIPCode,CTCITDesc,MRADMRowId,CTSEXDesc,REFDDesc,REFDAddress,CLNAddress2,REFDCITDesc,DISStatus,REFDZIPCode,CLNChildSub,DISClinicalOpinion,DISOtherResults,DISSuggestions,DISCTPCPDesc,DISCTPCPTelO,CTCPTInternalType,DISRowId,TelH,DISUpdateDate,DISUpdateTime,SSUSRInitials,SSUSRName,SSUSRSurname,SSUSRGivenName,MRADMGPConsent,IPATDesc,HOSPPhone,FAMDTTLCode,WARDCode,CTLOCCode,CTLOCDesc,PAADMHospitalDR,REFDPROVCode,CLNAddress1,CLNCTCITDesc,CLNZIPCode,CLNPROVCode,CTLOCNataHeadings,DISParRef,VSTDesc,DSCLDesc,FAMDDesc,FAMDForename,CTPCPTextTwo,REFREFDDR,DISDate,RapidNo,DISPrincipalDiagnosis,verno,PAADMRowId,TRESRowId,ARCIMDesc,TRRowId,SECText,OEORICollectionDate,OEORICollectionTime,TRClinicallySignificant,RESSTDesc,ARCICOrdCatDR
 s (PAPMIRowId,MRADMRowId,CLNChildSub,DISRowId,DISParRef,PAADMRowId,TRRowId,PAADMHospitalDR,ARCICOrdCatDR)=0
 n OEORDRowId
 s OEORDRowId=""
 s (PAADMADMNo,CTPCPDesc,PAADMAdmDate,PAADMDischgDate,HOSPDesc,DISProcedures,DISActiveProblems,PAADMAdmTime,PAADMDischgTime,PAPMIDOB,PAPMIName,PAPMIName2,PAPMIName3,PAPMINo,PAPERTelH,DISProgressNotes,PAPERStName,PAPERForeignAddress,CTZIPCode,CTCITDesc,MRADMRowId,CTSEXDesc,REFDDesc,REFDAddress,CLNAddress2,REFDCITDesc,DISStatus,REFDZIPCode,DISClinicalOpinion,DISOtherResults,DISSuggestions,DISCTPCPDesc,DISCTPCPTelO,CTCPTInternalType,TelH,DISUpdateDate,DISUpdateTime,SSUSRInitials,SSUSRName,SSUSRSurname,SSUSRGivenName,MRADMGPConsent,IPATDesc,HOSPPhone,FAMDTTLCode,WARDCode,CTLOCCode,CTLOCDesc,REFDPROVCode,CLNAddress1,CLNCTCITDesc,CLNZIPCode,CLNPROVCode,CTLOCNataHeadings,VSTDesc,DSCLDesc,FAMDDesc,FAMDForename,CTPCPTextTwo,REFREFDDR,DISDate,RapidNo,DISPrincipalDiagnosis,verno,TRESRowId,ARCIMDesc,SECText,OEORICollectionDate,TRClinicallySignificant,RESSTDesc)="" 
 s ^zbernard("1")=1
 s ind=1
 s ^zbernard("2")=2
 s END=0

 ; Principal Diagnosis 
 //s idx=0 f  s idx=$o(^PA("DISSUM",DischID,"PD",idx)) q:idx=""  d 
 //. s DISPrincipalDiagnosis=DISPrincipalDiagnosis_$s(DISPrincipalDiagnosis="":"",1:$c(13,10))_$g(^PA("DISSUM",CurrDischID,"PD",idx))


 &sql(select
 PAADM_RowId, 
 PAADM_ADMNo,
 TRANS_CTCP_DR->CTPCP_Desc,
 PAADM_AdmDate,
 PAADM_DischgDate,
 PAADM_CurrentWard_DR->WARD_LocationDR->CTLOC_Hospital_DR->HOSP_Desc,
 PAADM_AdmTime,
 PAADM_DischgTime,
 PAPMI_RowId,
 PAPMI_DOB,
 PAPMI_Name, 
 PAPMI_Name2,
 PAPMI_Name3,
 PAPMI_No,
 PAPMI_PAPER_DR->PAPER_TelH,
 PAPMI_PAPER_DR->PAPER_StName,
 PAPMI_PAPER_DR->PAPER_ForeignAddress,
 PAPMI_PAPER_DR->PAPER_Zip_DR->CTZIP_Code, 
 PAPMI_PAPER_DR->PAPER_CityCode_DR->CTCIT_Desc,
 PAADM_MainMRADM_DR,
 PAPMI_PAPER_DR->PAPER_Sex_DR->CTSEX_Desc,
 REF_RefDoc_DR->REFD_Desc as REFDDesc,
 REF_RefDoc_DR->REFD_Address,
 REF_RefDocClinic_DR->CLN_Address2,
 REF_RefDoc_DR->REFD_CITY_DR->CTCIT_Desc as REFDCITDesc,
 DIS_PADischargeSummary_DR->DIS_Status,
 REF_RefDoc_DR->REFD_CTZIP_DR->CTZIP_Code as REFDZIPCode,
 REF_RefDocClinic_DR->CLN_ChildSub,
 DIS_PADischargeSummary_DR->DIS_CareProv_DR->CTPCP_Desc as DISCTPCPDesc,
 DIS_PADischargeSummary_DR->DIS_CareProv_DR->CTPCP_TelO as DISCTPCPTelO,
 DIS_PADischargeSummary_DR->DIS_CareProv_DR->CTPCP_CarPrvTp_DR->CTCPT_InternalType,
 DIS_PADischargeSummary_DR,
 PAPMI_PAPER_DR->PAPER_TelH,
 DIS_PADischargeSummary_DR->DIS_UpdateDate,
 DIS_PADischargeSummary_DR->DIS_UpdateTime,
 DIS_PADischargeSummary_DR->DIS_UpdateUser_DR->SSUSR_Initials,
 DIS_PADischargeSummary_DR->DIS_UpdateUser_DR->SSUSR_Name,
 DIS_PADischargeSummary_DR->DIS_UpdateUser_DR->SSUSR_Surname,
 DIS_PADischargeSummary_DR->DIS_UpdateUser_DR->SSUSR_GivenName,
 PAADM_MainMRADM_DR->MRADM_GPConsent,
 PAADM_InPatAdmType_DR->IPAT_Desc,
 PAADM_CurrentWard_DR->WARD_LocationDR->CTLOC_Hospital_DR->HOSP_Phone, 
 PAADM_PAPMI_dr->PAPMI_PAPER_DR->PAPER_FamilyDoctor_DR->REFD_Title_DR->TTL_Code as FAMDTTLCode,
 PAADM_CurrentWard_DR->WARD_Code,
 PAADM_DepCode_DR->CTLOC_Code,
 PAADM_DepCode_DR->CTLOC_Desc,
 PAADM_Hospital_DR,
 REF_RefDoc_DR->REFD_Province_DR->PROV_Code,
 REF_RefDocClinic_DR->CLN_Address1,
 REF_RefDocClinic_DR->CLN_City_DR->CTCIT_Desc as CLNCTCITDesc,
 REF_RefDocClinic_DR->CLN_Zip_DR->CTZIP_Code as CLNZIPCode,
 REF_RefDocClinic_DR->CLN_ZIP_DR->CTZIP_Province_dr->PROV_Code as CLNPROVCode,
 PAADM_DepCode_DR->CTLOC_NATAHeadings,
 DIS_ParRef,
 PAADM_MainMRADM_DR->MRADM_VisitType_DR->VST_Desc,
 PAADM_MainMRADM_DR->MRADM_DischClassif_DR->DSCL_Desc,
 PAPMI_PAPER_DR->PAPER_FamilyDoctor_DR->REFD_Desc as FAMDDesc,
 PAPMI_PAPER_DR->PAPER_FamilyDoctor_DR->REFD_Forename as FAMDForename,
 DIS_PADischargeSummary_DR->DIS_CareProv_DR->CTPCP_TextTwo,
 REF_RefDoc_DR,
 DIS_PADischargeSummary_DR->DIS_Date,
 PAPMI_PAPER_DR->PAPER_ID as RapidNo
 INTO :PAADMRowId1,:PAADMADMNo,:CTPCPDesc,:PAADMAdmDate,:PAADMDischgDate,:HOSPDesc,
:PAADMAdmTime,:PAADMDischgTime,:PAPMIRowId,:PAPMIDOB,
:PAPMIName,:PAPMIName2,:PAPMIName3,
:PAPMINo,:PAPERTelH,:PAPERStName,:PAPERForeignAddress,
:CTZIPCode,:CTCITDesc,:MRADMRowId,:CTSEXDesc,
:REFDDesc,:REFDAddress,:CLNAddress2,:REFDCITDesc,:DISStatus,:REFDZIPCode,:CLNChildSub,
:DISCTPCPDesc,
:DISCTPCPTelO,:CTCPTInternalType,:DISRowId,:TelH,:DISUpdateDate,:DISUpdateTime,:SSUSRInitials,:SSUSRName,:SSUSRSurname,:SSUSRGivenName,
:MRADMGPConsent,:IPATDesc,:HOSPPhone,:FAMDTTLCode,:WARDCode,:CTLOCCode,
:CTLOCDesc,:PAADMHospitalDR,:REFDPROVCode,:CLNAddress1,:CLNCTCITDesc,
:CLNZIPCode,:CLNPROVCode,:CTLOCNataHeadings,:DISParRef,:VSTDesc,:DSCLDesc,
:FAMDDesc,:FAMDForename,:CTPCPTextTwo,:REFREFDDR,:DISDate,:RapidNo
 
 FROM sqluser.PA_Adm left join sqluser.PA_AdmTransaction on (PAADM_Rowid=TRANS_ParRef and SQLUser.PA_AdmTransaction.TRANS_CTCP_DR IS NOT NULL),sqluser.PA_PatMas,sqluser.PA_DischargeSummaryRefDoc,
 sqluser.PA_Adm2DischargeSummary PA_Adm2DischargeSummary,
 sqluser.PA_DischargeSummary PA_DischargeSummary
 WHERE PAADM_PAPMI_DR=PAPMI_RowId and
 (PAADM_RowId=DIS_ParRef) AND DIS_PADischargeSummary_DR=*REF_ParRef and
 (DIS_PADischargeSummary_DR=pa_dischargesummary.DIS_RowId) and
 DIS_PADischargeSummary_DR =:DisID
 Order by PAADM_DischgDate desc,PAADM_DischgTime desc, TRANS_EndDate desc, TRANS_EndTime desc
 )
 ;Order by PAADM_AdmDate desc,PAADM_AdmTime desc, TRANS_StartDate desc, TRANS_StartTime desc
 ;and TRANS_TransType_dr=3 taken out of the selection criteria in query above 05/08/2010
 
 s ^zbernard("3")=3
 d FormatDates
 d FormatTimes

 s PAPERStName=$zstrip(PAPERStName,"*C")
 s PAPERForeignAddress=$zstrip(PAPERForeignAddress,"*C")
 s REFDAddress=$zstrip(REFDAddress,"*C")
 s CLNAddress2=$zstrip(CLNAddress2,"*C")
 s CLNAddress1=$zstrip(CLNAddress1,"*C")

 ; Principal Diagnosis 
 ;s idx=0 f  s idx=$o(^PA("DISSUM",DisID,"PD",idx)) q:idx=""  d 
 ;. s DISPrincipalDiagnosis=DISPrincipalDiagnosis_$s(DISPrincipalDiagnosis="":"",1:$c(13,10))_$g(^PA("DISSUM",DisID,"PD",idx))

 n idx,maxlength,currentstr,currentlength
 ; define all off the Text Area strings.

 ; Set up maxlength here. Once defined, we don't have to define it again - it will apply to all loops.
 s maxlength=80000

 ; Principal Diagnosis 
 s idx=0,currentlength=0 f  s idx=$o(^PA("DISSUM",DisID,"PD",idx)) q:idx=""   q:currentlength>=maxlength  d 
 . ; change logic here to stop at a maximum string length
 . ;s DISPrincipalDiagnosis=DISPrincipalDiagnosis_$s(DISPrincipalDiagnosis="":"",1:$c(13,10))_$g(^PA ("DISSUM",DischID,"PD",idx))
 . s currentstr=$g(^PA("DISSUM",DisID,"PD",idx))
 . i $l(DISPrincipalDiagnosis)+$l(currentstr)<=maxlength d
 . . s DISPrincipalDiagnosis=DISPrincipalDiagnosis_$s(DISPrincipalDiagnosis="":"",1:$c(13,10))_currentstr
 . i $l(DISPrincipalDiagnosis)+$l(currentstr)>maxlength d
 . . s DISPrincipalDiagnosis=DISPrincipalDiagnosis_$s(DISPrincipalDiagnosis="":"",1:$c(13,10))_$e(currentstr,1,maxlength-($l(DISPrincipalDiagnosis)+$l(currentstr)))
 . s currentlength = $l(DISPrincipalDiagnosis)

 ; Active Problems 
 s idx=0,currentlength=0 f  s idx=$o(^PA("DISSUM",DisID,"ACT",idx)) q:idx=""   q:currentlength>=maxlength  d 
 . ; change logic here to stop at a maximum string length
 . ;s DISActiveProblems=DISActiveProblems_$s(DISActiveProblems="":"",1:$c(13,10))_$g(^PA ("DISSUM",DischID,"PD",idx))
 . s currentstr=$g(^PA("DISSUM",DisID,"ACT",idx))
 . i $l(DISActiveProblems)+$l(currentstr)<=maxlength d
 . . s DISActiveProblems=DISActiveProblems_$s(DISActiveProblems="":"",1:$c(13,10))_currentstr
 . i $l(DISActiveProblems)+$l(currentstr)>maxlength d
 . . s DISActiveProblems=DISActiveProblems_$s(DISActiveProblems="":"",1:$c(13,10))_$e(currentstr,1,maxlength-($l(DISActiveProblems)+$l(currentstr)))
 . s currentlength = $l(DISActiveProblems)

 ; Procedures 
 s idx=0,currentlength=0 f  s idx=$o(^PA("DISSUM",DisID,"PROC",idx)) q:idx=""   q:currentlength>=maxlength  d 
 . ; change logic here to stop at a maximum string length
 . ;s DISProcedures=DISProcedures_$s(DISProcedures="":"",1:$c(13,10))_$g(^PA ("DISSUM",DischID,"PD",idx))
 . s currentstr=$g(^PA("DISSUM",DisID,"PROC",idx))
 . i $l(DISProcedures)+$l(currentstr)<=maxlength d
 . . s DISProcedures=DISProcedures_$s(DISProcedures="":"",1:$c(13,10))_currentstr
 . i $l(DISProcedures)+$l(currentstr)>maxlength d
 . . s DISProcedures=DISProcedures_$s(DISProcedures="":"",1:$c(13,10))_$e(currentstr,1,maxlength-($l(DISProcedures)+$l(currentstr)))
 . s currentlength = $l(DISProcedures)

 ; Progress Notes 
 s idx=0,currentlength=0 f  s idx=$o(^PA("DISSUM",DisID,"PN",idx)) q:idx=""   q:currentlength>=maxlength  d 
 . ; change logic here to stop at a maximum string length
 . ;s DISProgressNotes=DISProgressNotes_$s(DISProgressNotes="":"",1:$c(13,10))_$g(^PA ("DISSUM",DischID,"PD",idx))
 . s currentstr=$g(^PA("DISSUM",DisID,"PN",idx))
 . s ^zwsa("currentstr")=currentstr
 . i $l(DISProgressNotes)+$l(currentstr)<=maxlength d
 . . s DISProgressNotes=DISProgressNotes_$s(DISProgressNotes="":"",1:$c(13,10))_currentstr
 . . s ^zwsa("DISProgressNotes1")=DISProgressNotes
 . i $l(DISProgressNotes)+$l(currentstr)>maxlength d
 . . s DISProgressNotes=DISProgressNotes_$s(DISProgressNotes="":"",1:$c(13,10))_$e(currentstr,1,maxlength-($l(DISProgressNotes)+$l(currentstr)))
 . . s ^zwsa("DISProgressNotes2")=DISProgressNotes
 . s currentlength = $l(DISProgressNotes)

 ; Clinical Opinion 
 s idx=0,currentlength=0 f  s idx=$o(^PA("DISSUM",DisID,"CO",idx)) q:idx=""   q:currentlength>=maxlength  d 
 . ; change logic here to stop at a maximum string length
 . ;s DISClinicalOpinion=DISClinicalOpinion_$s(DISClinicalOpinion="":"",1:$c(13,10))_$g(^PA ("DISSUM",DischID,"PD",idx))
 . s currentstr=$g(^PA("DISSUM",DisID,"CO",idx))
 . i $l(DISClinicalOpinion)+$l(currentstr)<=maxlength d
 . . s DISClinicalOpinion=DISClinicalOpinion_$s(DISClinicalOpinion="":"",1:$c(13,10))_currentstr
 . i $l(DISClinicalOpinion)+$l(currentstr)>maxlength d
 . . s DISClinicalOpinion=DISClinicalOpinion_$s(DISClinicalOpinion="":"",1:$c(13,10))_$e(currentstr,1,maxlength-($l(DISClinicalOpinion)+$l(currentstr)))
 . s currentlength = $l(DISClinicalOpinion)

 ; Suggestions 
 s idx=0,currentlength=0 f  s idx=$o(^PA("DISSUM",DisID,"SUG",idx)) q:idx=""   q:currentlength>=maxlength  d 
 . ; change logic here to stop at a maximum string length
 . ;s DISSuggestions=DISSuggestions_$s(DISSuggestions="":"",1:$c(13,10))_$g(^PA ("DISSUM",DischID,"PD",idx))
 . s currentstr=$g(^PA("DISSUM",DisID,"SUG",idx))
 . i $l(DISSuggestions)+$l(currentstr)<=maxlength d
 . . s DISSuggestions=DISSuggestions_$s(DISSuggestions="":"",1:$c(13,10))_currentstr
 . i $l(DISSuggestions)+$l(currentstr)>maxlength d
 . . s DISSuggestions=DISSuggestions_$s(DISSuggestions="":"",1:$c(13,10))_$e(currentstr,1,maxlength-($l(DISSuggestions)+$l(currentstr)))
 . s currentlength = $l(DISSuggestions)

 ; Other Results
 s idx=0,currentlength=0 f  s idx=$o(^PA("DISSUM",DisID,"OR",idx)) q:idx=""   q:currentlength>=maxlength  d 
 . ; change logic here to stop at a maximum string length
 . ;s DISOtherResults=DISOtherResults_$s(DISOtherResults="":"",1:$c(13,10))_$g(^PA ("DISSUM",DischID,"PD",idx))
 . s currentstr=$g(^PA("DISSUM",DisID,"OR",idx))
 . i $l(DISOtherResults)+$l(currentstr)<=maxlength d
 . . s DISOtherResults=DISOtherResults_$s(DISOtherResults="":"",1:$c(13,10))_currentstr
 . i $l(DISOtherResults)+$l(currentstr)>maxlength d
 . . s DISOtherResults=DISOtherResults_$s(DISOtherResults="":"",1:$c(13,10))_$e(currentstr,1,maxlength-($l(DISOtherResults)+$l(currentstr)))
 . s currentlength = $l(DISOtherResults)

 ;get the "version number"
 s idstr=##Class(web.PAAdmDischargeSummary).GetPreviousVersions(DisID) 
 s verno=($l(idstr,"^")+1) 
 i idstr="" s verno=1
 //new select to declare cursor
 &sql(declare TRAKDischSummary1 cursor for 
 select distinct
 OEORI_RowId,
 PAADM_RowId,
 TRES_RowId,
 OEORI_ItmMast_DR->ARCIM_Desc,
 TRES_OETR_DR,
 TR_DateVerified,
 TR_TimeVerified,
 TR_ClinicallySignificant,
 TR_ResStat_DR->RESST_Desc,
 OEORI_ItmMast_DR->ARCIM_ItemCat_DR->ARCIC_OrdCat_DR,
 PAADM_AdmDate,
 DIS_PADischargeSummary_DR->DIS_Date,
 PAADM_Hospital_DR
 FROM   sqluser.OE_Order, sqluser.OE_OrdItem, sqluser.PA_Adm,
  sqluser.OE_OrdTextResult, sqluser.OE_TextResult,
  sqluser.PA_Adm2DischargeSummary PA_Adm2DischargeSummary, 
  sqluser.PA_DischargeSummary PA_DischargeSummary
 where OEORD_RowId=OEORI_OEORD_ParRef and
        OEORD_ADM_DR=PAADM_RowId and
        OEORI_RowId=TRES_ParRef and
        TRES_OETR_DR=TR_RowId AND
        OEORD_RowId=TR_OEORD_DR AND
        PAADM_RowId=DIS_ParRef AND
 		DIS_PADischargeSummary_DR=pa_dischargesummary.DIS_RowId and
 		PAADM_PAPMI_DR=:PAPMIRowId AND
 		PAADM_RowId in (select distinct
 PAADM_RowId

 FROM sqluser.PA_Adm, sqluser.PA_AdmTransaction,sqluser.PA_PatMas,sqluser.PA_DischargeSummaryRefDoc,
 sqluser.PA_Adm2DischargeSummary PA_Adm2DischargeSummary,
 sqluser.PA_DischargeSummary PA_DischargeSummary
 WHERE PAADM_PAPMI_DR=PAPMI_RowId and PAADM_Rowid=TRANS_ParRef and
 (PAADM_RowId=DIS_ParRef) AND DIS_PADischargeSummary_DR=*REF_ParRef and
 (DIS_PADischargeSummary_DR=pa_dischargesummary.DIS_RowId) and
 DIS_PADischargeSummary_DR = :DisID) AND    
        TR_ClinicallySignificant='Y' AND
        OEORI_SttDat >= PAADM_AdmDate)
 &sql(open  TRAKDischSummary1)


 ;WHERE PAADM_PAPMI_DR=PAPMI_RowId and PAADM_Rowid=TRANS_ParRef and TRANS_TransType_dr=3 and (removed transaction type criteria)
 
 // build the row
 Set str=$LB(PAADMRowId1,PAADMADMNo,CTPCPDesc,PAADMAdmDate,PAADMDischgDate,HOSPDesc,PAADMAdmTime,PAADMDischgTime,PAPMIRowId,PAPMIDOB,PAPMIName,PAPMIName2,PAPMIName3,PAPMINo,PAPERTelH,PAPERStName,PAPERForeignAddress,CTZIPCode,CTCITDesc,MRADMRowId,CTSEXDesc,REFDDesc,REFDAddress,CLNAddress2,REFDCITDesc,DISStatus,REFDZIPCode,CLNChildSub,DISCTPCPDesc,DISCTPCPTelO,CTCPTInternalType,DISRowId,TelH,DISUpdateDate,DISUpdateTime,SSUSRInitials,SSUSRName,SSUSRSurname,SSUSRGivenName,MRADMGPConsent,IPATDesc,HOSPPhone,FAMDTTLCode,WARDCode,CTLOCCode,CTLOCDesc,PAADMHospitalDR,REFDPROVCode,CLNAddress1,CLNCTCITDesc,CLNZIPCode,CLNPROVCode,CTLOCNataHeadings,DISParRef,VSTDesc,DSCLDesc,FAMDDesc,FAMDForename,CTPCPTextTwo,REFREFDDR,DISDate,RapidNo,DISPrincipalDiagnosis,DISActiveProblems,DISProcedures,DISProgressNotes,DISClinicalOpinion,DISSuggestions,DISOtherResults,verno)


 //fetch first order record
 &sql(fetch TRAKDischSummary1 into :OEORDRowId,:PAADMRowId,:TRESRowId,:ARCIMDesc,:TRRowId,:OEORICollectionDate,:OEORICollectionTime,:TRClinicallySignificant,:RESSTDesc,:ARCICOrdCatDR, :PAADMAdmDate, :DISDate,:PAADMHospitalDR)
 d FormatDatesORD
 set SECText=..GetSECText(TRRowId)
 //d FormatTimesORD
 set strNEWOP=$LB(OEORDRowId,PAADMRowId,TRESRowId,ARCIMDesc,TRRowId,SECText,OEORICollectionDate,OEORICollectionTime,TRClinicallySignificant,RESSTDesc,ARCICOrdCatDR,PAADMAdmDate,DISDate,PAADMHospitalDR)

 i OEORDRowId="" s END=1

 d BuildRow

 while END'=1{
 //d FormatDatesORD

 s (OEORDRowId,PAADMRowId,TRESRowId,ARCIMDesc,TRRowId,SECText,OEORICollectionDate,OEORICollectionTime,TRClinicallySignificant,RESSTDesc,ARCICOrdCatDR,PAADMAdmDate,DISDate,PAADMHospitalDR)=""
 s ^zbernard("4")=4
 //fetch next order records
 &sql(fetch TRAKDischSummary1 into :OEORDRowId,:PAADMRowId,:TRESRowId,:ARCIMDesc,:TRRowId,:OEORICollectionDate,:OEORICollectionTime,:TRClinicallySignificant,:RESSTDesc,:ARCICOrdCatDR,:PAADMAdmDate, :DISDate,:PAADMHospitalDR)
 d FormatDatesORD
 set SECText=..GetSECText(TRRowId)
 //d FormatTimesORD
 set strNEWOP=$LB(OEORDRowId,PAADMRowId,TRESRowId,ARCIMDesc,TRRowId,SECText,OEORICollectionDate,OEORICollectionTime,TRClinicallySignificant,RESSTDesc,ARCICOrdCatDR,PAADMAdmDate,DISDate,PAADMHospitalDR)

 i OEORDRowId="" {
	 s END=1
 } else {

 d BuildRow
 }
}

 //d FormatDatesORD

 &sql(close TRAKDischSummary1)

 // Build QHandle (AtEnd,ReportID,Index)
 Set QHandle=$lb(0,repid,0)
 s ^zbernard("5")=5

 Quit $$$OK

 //WSA Edit

FormatDatesORD
 If OEORICollectionDate Set OEORICollectionDate=$ZD(OEORICollectionDate,3)
 Quit

 //FormatTimesORD
 //If OEORICollectionTime Set OEORICollectionTime=$ZT(OEORICollectionTime,2)
 //Quit

BuildRow
 s zwsa("buildrow")=""
 s ^CacheTemp(repid,ind)=str_strNEWOP
 s ind=ind+1
 q

FormatDates
 // Convert the dates to ODBC date format
 If PAADMAdmDate Set PAADMAdmDate=$ZD(PAADMAdmDate,3)
 If PAADMDischgDate Set PAADMDischgDate=$ZD(PAADMDischgDate,3)
 If PAPMIDOB Set PAPMIDOB=$ZD(PAPMIDOB,3)
 If DISUpdateDate Set DISUpdateDate=$ZD(DISUpdateDate,3)
 If DISDate Set DISDate=$ZD(DISDate,3)
 Quit

FormatTimes
 // Convert the times to ODBC time format
 If PAADMAdmTime Set PAADMAdmTime=$ZT(PAADMAdmTime,2)
 If PAADMDischgTime Set PAADMDischgTime=$ZT(PAADMDischgTime,2)
 If DISUpdateTime Set DISUpdateTime=$ZT(DISUpdateTime,2)
 Quit
]]></Implementation>
</Method>

<Method name="GetSECText">
<ClassMethod>1</ClassMethod>
<FormalSpec>SECParRef</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
 &sql(DECLARE SECTextCursor CURSOR FOR 
  SELECT SEC_Text FROM SQLUser.OE_TextResultSection where SEC_ParRef = :SECParRef
 )
 &SQL(OPEN SECTextCursor)
 &sql(FETCH SECTextCursor INTO :SECText)
 Set SECText = $LISTTOSTRING(SECText, $CHAR(10))
 &SQL(CLOSE SECTextCursor)
 Quit SECText
]]></Implementation>
</Method>

<Method name="TRAKDischSummary1Fetch">
<Description>
This is the Fetch component of the %Library.Query. 
This should never have to change. It is designed to fetch the row for each subscript of the ^CacheTemp
global and return this row to the Crystal Report.</Description>
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec><![CDATA[&QHandle:%Library.Binary,&Row:%Library.List,&AtEnd:%Library.Integer=0]]></FormalSpec>
<Private>0</Private>
<ReturnType>%Library.Status</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 // This fetch method should never have to change. 

 // repid - Report ID
 // ind   - sequence index which represents each row

 New repid,ind

 // Restore QHandle
 Set AtEnd=$li(QHandle,1)
 Set repid=$li(QHandle,2)
 Set ind=$li(QHandle,3)

 Set ind=$o(^CacheTemp(repid,ind))
 If ind="" {	// if there are no more rows, finish fetching
 Set AtEnd=1
 Set Row=""
 }
 Else      {	// fetch row
 Set Row=^CacheTemp(repid,ind)
 }

 // Save QHandle
 s QHandle=$lb(AtEnd,repid,ind)
 Quit $$$OK
]]></Implementation>
</Method>

<Query name="TRAKDischSummary1">
<Description>
Vic Triage Report
It expects 1 parameter of type integer and will return 40 odd fields:
Field1 - Integer
Field2 - String(MAXLEN=255)
Field3 - Date
Field4 - Time</Description>
<Type>%Library.Query</Type>
<FormalSpec>DisID:%Integer,reptype:%String,DocID:%String,ClinID:%String</FormalSpec>
<SqlProc>1</SqlProc>
<SqlView>0</SqlView>
<Parameter name="CONTAINID" value="0"/>
<Parameter name="ROWSPEC" value="PAADMRowId1:%Integer,PAADMADMNo:%String(MAXLEN=255),CTPCPDesc:%String(MAXLEN=255),PAADMAdmDate:%Date,PAADMDischgDate:%Date,HOSPDesc:%String(MAXLEN=255),PAADMAdmTime:%String(MAXLEN=255),PAADMDischgTime:%String(MAXLEN=255),PAPMIRowId:%Integer,PAPMIDOB:%Date,PAPMIName:%String(MAXLEN=255),PAPMIName2:%String(MAXLEN=255),PAPMIName3:%String(MAXLEN=255),PAPMINo:%String(MAXLEN=255),PAPERTelH:%String(MAXLEN=255),PAPERStName:%String(MAXLEN=255),PAPERForeignAddress:%String(MAXLEN=255),CTZIPCode:%String(MAXLEN=255),CTCITDesc:%String(MAXLEN=255),MRADMRowId:%Integer,CTSEXDesc:%String(MAXLEN=255),REFDDesc:%String(MAXLEN=255),REFDAddress:%String(MAXLEN=255),CLNAddress2:%String(MAXLEN=255),REFDCITDesc:%String(MAXLEN=255),DISStatus:%String(MAXLEN=255),REFDZIPCode:%String(MAXLEN=255),CLNChildSub:%Integer,DISCTPCPDesc:%String(MAXLEN=255),DISCTPCPTelO:%String(MAXLEN=255),CTCPTInternalType:%String(MAXLEN=255),DISRowId:%Integer,TelH:%String(MAXLEN=255),DISUpdateDate:%Date,DISUpdateTime:%String(MAXLEN=255),SSUSRInitials:%String(MAXLEN=255),SSUSRName:%String(MAXLEN=255),SSUSRSurname:%String(MAXLEN=255),SSUSRGivenName:%String(MAXLEN=255),MRADMGPConsent:%String(MAXLEN=255),IPATDesc:%String(MAXLEN=255),HOSPPhone:%String(MAXLEN=255),FAMDTTLCode:%String(MAXLEN=255),WARDCode:%String(MAXLEN=255),CTLOCCode:%String(MAXLEN=255),CTLOCDesc:%String(MAXLEN=255),PAADMHospitalDR:%Integer,REFDPROVCode:%String(MAXLEN=255),CLNAddress1:%String(MAXLEN=255),CLNCTCITDesc:%String(MAXLEN=255),CLNZIPCode:%String(MAXLEN=255),CLNPROVCode:%String(MAXLEN=255),CTLOCNataHeadings:%String(MAXLEN=255),DISParRef:%Integer,VSTDesc:%String(MAXLEN=255),DSCLDesc:%String(MAXLEN=255),FAMDDesc:%String(MAXLEN=255),FAMDForename:%String(MAXLEN=255),CTPCPTextTwo:%String(MAXLEN=255),REFREFDDR:%String(MAXLEN=255),DISDate:%Date,RapidNo:%String(MAXLEN=255),DISPrincipalDiagnosis:%String(MAXLEN=35000),DISActiveProblems:%String(MAXLEN=35000),DISProcedures:%String(MAXLEN=35000),DISProgressNotes:%String(MAXLEN=35000),DISClinicalOpinion:%String(MAXLEN=35000),DISSuggestions:%String(MAXLEN=35000),DISOtherResults:%String(MAXLEN=35000),verno:%String(MAXLEN=255),OEORIRowId:%String(MAXLEN=255),PAADMRowId:%Integer,TRESRowId:%String(MAXLEN=255),ARCIMDesc:%String(MAXLEN=255),TRRowId:%Integer,SECText:%String(MAXLEN=32749),OEORICollectionDate:%Date,OEORICollectionTime:%String(MAXLEN=255),TRClinicallySignificant:%String(MAXLEN=255),RESSTDesc:%String(MAXLEN=255),ARCICOrdCatDR:%String(MAXLEN=255)"/>
<Parameter name="SELECTMODE" value="ODBC"/>
</Query>
</Class>
</Export>
