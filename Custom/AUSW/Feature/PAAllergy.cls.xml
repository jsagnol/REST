<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Custom.AUSW.Feature.PAAllergy">
<IncludeCode>Custom.AUSW.Features</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>websys.UDFExt.Abstract</Super>
<TimeCreated>64190,49482.243092</TimeCreated>

<Method name="OnAfterSave">
<ClassMethod>1</ClassMethod>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	set id = %UDF.Id
	//Taken from UDF entry: $$OnAfterSave^USWARHPAAllergy($g(id)) - Event: OnAfterSave
	Quit $$OnAfterSave^USWARHPAAllergy($g(id))
]]></Implementation>
</Method>

<Method name="OnBeforeSave">
<ClassMethod>1</ClassMethod>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	set id = %UDF.Id
	//Taken from UDF entry: $$OnBeforeSave^USWARHPAAllergy(id) - Event: OnBeforeSave
	Quit $$OnBeforeSave^USWARHPAAllergy(id)
]]></Implementation>
</Method>

<Method name="RegisterEntryPoints">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set sc = $$$OK
	Try {
		set sc = ..RegisterWithFeature("User.PAAllergy", "OnAfterSave","##class(Custom.AUSW.Feature.PAAllergy).OnAfterSave()", $$$Feature(AUSWPAAllergyOnAfterSave))
		If $System.Status.IsError(sc) Quit
	} catch(ex){
		set sc = ex.AsStatus()
	}
	Try {
		set sc = ..RegisterWithFeature("User.PAAllergy", "OnBeforeSave","##class(Custom.AUSW.Feature.PAAllergy).OnBeforeSave()", $$$Feature(AUSWPAAllergyOnBeforeSave))
		If $System.Status.IsError(sc) Quit
	} catch(ex){
		set sc = ex.AsStatus()
	}
	Quit sc
]]></Implementation>
</Method>
</Class>
</Export>
