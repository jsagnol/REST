<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Custom.SWARH.JS.webcommon.Report.Custom.SWARHRNAP1002">
<Description>
Component JavaScript for: webcommon.Report.Custom</Description>
<Modified>0</Modified>
<Super>websys.AbstractJavaScript</Super>
<TimeCreated>63503,40906.073239</TimeCreated>

<Parameter name="SrcVer">
<Description>
Location and Revision of this file in Perforce (Auto-updating)</Description>
<Default>$Id: //custom_ccrs/au/AUSW/T2016/BASE/cls/Custom/SWARH/JS/webcommon/Report/Custom/SWARHRNAP1002.xml#1 $</Default>
</Parameter>

<Method name="JSContent">
<Description>
 </Description>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
//for SWARH

//MW SWARH 18/09/08 (Copy of webcommon.Report.Custom_SWARH.MTED.075.js) 

var HObj=document.getElementById('custom6');
var LObj=document.getElementById('ld398iHOSPDesc');
var LObj1=document.getElementById('ld1906icustom6');
if(HObj)
{
	HObj.disabled=true;
	HObj.className="disabledField";
}
if(LObj)
{
	LObj.disabled=true;
}
//disable click lookup
if(LObj1)
{
	LObj1.disabled=true;
}

var NAP1002 = {
	target1: undefined,
	target2: undefined,
	target3: undefined,
	KPIinput: undefined,
	origSubmit: undefined,
	init: function() {
		this.target1 = document.getElementById('target1');
		this.target2 = document.getElementById('target2');
		this.target3 = document.getElementById('target3');
		this.KPIinput = document.getElementById('custom9');
		this.origSubmit = fwebcommon_Report_Custom_submit;
		fwebcommon_Report_Custom_submit = this.validate;

		websys_addListener('blur', 'onblur', NAP1002.blur, this.target1);
		websys_addListener('blur', 'onblur', NAP1002.blur, this.target2);
		websys_addListener('blur', 'onblur', NAP1002.blur, this.target3);
		
		// obj = document.getElementById('Preview');
		// this.origDelay = timedelayonPreview;
		// //get rid of delay on preview
		// timedelayonPreview = function() {};
		// if (obj) {
		// 	NAP1002.origPreviewClick = obj.onclick;
		// 	obj.onclick = null;
		// 	websys_addListener('click', 'onclick', NAP1002.validate, obj);
		// }	
	},
	blur: function() {
		if (NAP1002 != this)
			return NAP1002.blur.call(NAP1002);
		else {
			var arTargets = [parseFloat(this.target1.value), parseFloat(this.target2.value), parseFloat(this.target3.value)];
			if (this.KPIinput)
				this.KPIinput.value = arTargets.join("|");
		}
	},
	getLabel: function(input, defaultName) {
		if (input) {
			var label = document.getElementById("c" + input.id);
			if (label)
				return label.innerText;
			return defaultName;
		}
	},
	validate: function() {
			if (NAP1002 != this)
				return NAP1002.validate.call(NAP1002);
			else {
				var arTargets = [parseFloat(this.target1.value), parseFloat(this.target2.value), parseFloat(this.target3.value)];
				
				var target1Valid = (!isNaN(arTargets[0]));
				var target2Valid = (!isNaN(arTargets[1]));
				var target3Valid = (!isNaN(arTargets[2]));

				var valid = target1Valid && target2Valid && target3Valid;

				var message = "Please enter a valid number into ";

				if (valid && ("function" == typeof this.origSubmit))
					return this.origSubmit();
				else if (!target1Valid) {
					try {
						this.target1.focus();
					} catch(ex) { }
					alert(message + this.getLabel(this.target1, "Target 1"));
				}
				else if (!target2Valid) {
					try {
						this.target2.focus();
					} catch(ex) { }
					alert(message + this.getLabel(this.target2, "Target 2"));
				}
				else if (!target3Valid) {
					try {
						this.target3.focus();
					} catch(ex) { }
					alert(message + this.getLabel(this.target3, "Target 3"));
				} else 
					alert("Please enter valid targets");
				return false;
			}
	}
}

NAP1002.init();
]]></Implementation>
</Method>
</Class>
</Export>
