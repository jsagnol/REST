<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Custom.SWARH.Report.RptSvc.StoredProc.SWARHRNAP1009">
<Description><![CDATA[
<pre>
**************************************************************************************************************************************
* Report Code: SWARHRNAP1009
* Report Description: Discharges
* Menu Caption: 
* Initial release: 
* Developer: Jayson Sagnol
* 
* Modified: 2015/09/17 - Ross Gladman - Added support for multiple specialties & programs
**************************************************************************************************************************************
</pre>]]></Description>
<ProcedureBlock>0</ProcedureBlock>
<Super>Custom.SWARH.Report.ZEN.StoredProc.Abstract</Super>
<TimeCreated>60905,54849</TimeCreated>

<Parameter name="SrcVer">
<Description>
Location and Revision of this file in Perforce (Auto-updating)</Description>
<Default>$Id: //custom_ccrs/au/AUSW/T2016/BASE/cls/Custom/SWARH/Report/RptSvc/StoredProc/SWARHRNAP1009.xml#1 $</Default>
</Parameter>

<Method name="SWARHRNAP1009Close">
<Description>
Location and Revision of this file in Perforce (Auto-updating)
This is the Close component of the %Library.Query.
This is standard code and should never have to change.
This is where all the cleanup is performed, i.e. the purging of the temporary storage global ^CacheTemp.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>QHandle:%Library.Binary</FormalSpec>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
 // Clean up by purging the temporary node in ^CacheTemp global
 New repid,ind
 Set repid=$li(QHandle,2)

 //Start Monitor (if configured to capture stats)
 i mon Do ..MonitorEnd(mon)

 Kill ^CacheTemp("TRAK",repid)
 Quit $$$OK
]]></Implementation>
</Method>

<Method name="SWARHRNAP1009Execute">
<Description>
This is the Execute section for the %Library.Query. 
All of the logic will be performed here.
A new node for the ^CacheTemp global will be created and each subscript of this global will contain
a row for the report.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&QHandle:%Library.Binary,Hospital:%Integer,DateFrom:%Date,DateTo:%Date,Specialty:%String,Program:%String,Clinician:%Integer]]></FormalSpec>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
		   
 New repid,ind

 Set repid=$I(^CacheTemp("TRAK"))
 
 New PAADMRowID,PAADMAdmNo,PAADMPAPERDR,PAADMPAADM2DR,PAADMDepCodeDR,PAADM2NFMICategDepartDR,PAADMAdmDocCodeDR,CTLOCDesc,DEPDesc,CTPCPDesc,PAPMIName,PAPMIName2,PAPMIName3,PAPERStName,CTCITDesc,PAPERTelH,PAADMRefDate,PAPMINo,PAADMAdmDate,PAADMDischgDate
 Set (PAADMRowID,PAADMAdmNo,PAADMPAPERDR,PAADMPAADM2DR,PAADMDepCodeDR,PAADM2NFMICategDepartDR,PAADMAdmDocCodeDR,CTLOCDesc,DEPDesc,CTPCPDesc,PAPMIName,PAPMIName2,PAPMIName3,PAPERStName,CTCITDesc,PAPERTelH,PAADMRefDate,PAPMINo,PAADMAdmDate,PAADMDischgDate) = ""
 
 s ind=1, END=0

 //Start Monitor (if configured to capture stats)
 s mon=..MonitorBegin()
 
 //Convert ODBC dates to cache format
 s DateFrom=$$intdate^SSUTIL4(DateFrom)
 s DateTo=$$intdate^SSUTIL4(DateTo)

 &SQL(DECLARE SWARHRNAP1009 CURSOR FOR
 	SELECT
		PAADM_RowID
		,PAADM_AdmNo
		,PAADM_PAPMI_DR->PAPMI_PAPER_DR
		,PAADM_PAADM2_DR
		,PAADM_DepCode_DR
		,PAADM_PAADM2_DR->PAADM2_NFMICategDepart_DR
		,PAADM_AdmDocCodeDR
		,PAADM_DepCode_DR->CTLOC_Desc AS Specialty
		,PAADM_PAADM2_DR->PAADM2_NFMICategDepart_DR->DEP_Desc AS Program
		,PAADM_AdmDocCodeDR->CTPCP_Desc AS Clinician
		,PAADM_PAPMI_DR->PAPMI_Name AS Surname
		,PAADM_PAPMI_DR->PAPMI_Name2 AS GivenName
		,PAADM_PAPMI_DR->PAPMI_Name3 AS MiddleName
		,PAADM_PAPMI_DR->PAPMI_PAPER_DR->PAPER_StName AS Address
		,PAADM_PAPMI_DR->PAPMI_PAPER_DR->PAPER_CityCode_DR->CTCIT_Desc AS Suburb
		,PAADM_PAPMI_DR->PAPMI_PAPER_DR->PAPER_TelH AS Phone
		,PAADM_DateReceived AS ReferralDate
		,PAADM_PAPMI_DR->PAPMI_No AS UR
		,PAADM_AdmDate AS AdmitDate
		,PAADM_DischgDate AS DischargeDate
	FROM
		SQLUser.PA_Adm
	WHERE
		(PAADM_DischgDate >= :DateFrom AND PAADM_DischgDate <= :DateTo)
		AND PAADM_Type='O'
		AND PAADM_Hospital_DR=:Hospital
		AND PAADM_VisitStatus not in ('C','P')
		
		-- AND (PAADM_DepCode_DR = :Specialty OR (:Specialty IS NULL)) -- Single Specialty Only
        AND (({fn CONCAT( ',', {fn CONCAT((:Specialty),',')})} [ {fn CONCAT( ',', {fn CONCAT((PAADM_DepCode_DR),',')})}) OR (:Specialty IS NULL))  -- Multiple Specialties

		
		-- AND (PAADM_PAADM2_DR->PAADM2_NFMICategDepart_DR = :Program OR (:Program IS NULL)) -- Single Program Only
		AND (({fn CONCAT( ',', {fn CONCAT((:Program),',')})} [ {fn CONCAT( ',', {fn CONCAT((PAADM_PAADM2_DR->PAADM2_NFMICategDepart_DR),',')})}) OR (:Program IS NULL)) -- Multiple Programs
		
		AND (PAADM_AdmDocCodeDR = :Clinician OR (:Clinician IS NULL))
    )
                
 &SQL(OPEN SWARHRNAP1009)
 
 d FetchRow //Fetch first row
  
 while END=0 {
     Set ENQRowId=..GetLastContact(PAADMPAPERDR)
     i ENQRowId{
     	Set LastContactDate = $P($G(^PAENQ(ENQRowId)),"^",1)
     }else{
        Set LastContactDate = ""
 	 }
 	 s PAADMAdmDate = ..GetOPAdmDate(PAADMRowID)
     If PAADMDischgDate = "" { S EffectiveDate = DateTo } Else { S EffectiveDate = PAADMDischgDate }
     Set LOS = ..GetLOSForOPEpisode(PAADMRowID,EffectiveDate)
	 d FormatDates, FormatTimes, FormatAddress
  	 s sort = ind
	 s ^CacheTemp("TRAK",repid,sort)=$LB(PAADMRowID,PAADMAdmNo,PAADMPAPERDR,PAADMPAADM2DR,PAADMDepCodeDR,PAADM2NFMICategDepartDR,PAADMAdmDocCodeDR,CTLOCDesc,DEPDesc,CTPCPDesc,PAPMIName,PAPMIName2,PAPMIName3,PAPERStName,CTCITDesc,PAPERTelH,PAADMRefDate,PAPMINo,PAADMAdmDate,PAADMDischgDate,LastContactDate,LOS)
	 s ind=ind+1
 	 d FetchRow //Fetch next row
 }

 &SQL(CLOSE SWARHRNAP1009)
 
 // Build QHandle (AtEnd,ReportID,Index)
 Set QHandle=$lb(0,repid,0)

 Quit $$$OK

FetchRow
 &sql(FETCH SWARHRNAP1009 INTO :PAADMRowID,:PAADMAdmNo,:PAADMPAPERDR,:PAADMPAADM2DR,:PAADMDepCodeDR,:PAADM2NFMICategDepartDR,:PAADMAdmDocCodeDR,:CTLOCDesc,:DEPDesc,:CTPCPDesc,:PAPMIName,:PAPMIName2,:PAPMIName3,:PAPERStName,:CTCITDesc,:PAPERTelH,:PAADMRefDate,:PAPMINo,:PAADMAdmDate,:PAADMDischgDate)
 if SQLCODE '= 0 set END = 1
 q
 
FormatDates
 s PAADMRefDate=..ConvertDateToODBC(PAADMRefDate)
 s PAADMAdmDate=..ConvertDateToODBC(PAADMAdmDate)
 s PAADMDischgDate=..ConvertDateToODBC(PAADMDischgDate)
 i LastContactDate '= "" {s LastContactDate=..ConvertDateToODBC(LastContactDate)}
 q
 
FormatTimes
 // s ENQTime=$ZT(ENQTime,2)
 q
 
FormatAddress
 s PAPERStName=$ZSTRIP(PAPERStName,"*C")
 q
]]></Implementation>
</Method>

<Method name="SWARHRNAP1009Fetch">
<Description>
This is the Fetch component of the %Library.Query. 
This should never have to change. It is designed to fetch the row for each subscript of the ^CacheTemp
global and return this row to the Crystal Report.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&QHandle:%Library.Binary,&Row:%Library.List,&AtEnd:%Library.Integer=0]]></FormalSpec>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
 // This fetch method should never have to change. 
 // repid - Report ID
 // ind   - sequence index which represents each row

 New repid,ind

 // Restore QHandle
 Set AtEnd=$li(QHandle,1)
 Set repid=$li(QHandle,2)
 Set ind=$li(QHandle,3)

 Set ind=$o(^CacheTemp("TRAK",repid,ind))
 If ind="" {	// if there are no more rows, finish fetching
	 Set AtEnd=1
	 Set Row=""
 }
 Else      {	// fetch row 
 	Set Row=^CacheTemp("TRAK",repid,ind)
 }

 // Save QHandle 
 s QHandle=$lb(AtEnd,repid,ind)
 Quit $$$OK
]]></Implementation>
</Method>

<Query name="SWARHRNAP1009">
<Type>%Library.Query</Type>
<FormalSpec>Hospital:%Integer,DateFrom:%Date,DateTo:%Date,Specialty:%String,Program:%String,Clinician:%Integer</FormalSpec>
<SqlProc>1</SqlProc>
<Parameter name="CONTAINID" value="0"/>
<Parameter name="ROWSPEC" value="PAADMRowID:%String,PAADMAdmNo:%String,PAADMPAPERDR:%String,PAADMPAADM2DR:%String,PAADMDepCodeDR:%String,PAADM2NFMICategDepartDR:%String,PAADMAdmDocCodeDR:%String,CTLOCDesc:%String,DEPDesc:%String,CTPCPDesc:%String,PAPMIName:%String,PAPMIName2:%String,PAPMIName3:%String,PAPERStName:%String,CTCITDesc:%String,PAPERTelH:%String,PAADMRefDate:%String,PAPMINo:%String,PAADMAdmDate:%String,PAADMDischgDate:%String,LastContactDate:%String,LOS:%String"/>
<Parameter name="SELECTMODE" value="ODBC"/>
</Query>
</Class>
</Export>
