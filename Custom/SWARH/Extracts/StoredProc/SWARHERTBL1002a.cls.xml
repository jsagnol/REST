<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Custom.SWARH.Extracts.StoredProc.SWARHERTBL1002a">
<Description><![CDATA[
<pre>
**************************************************************************************************************************************
* Report Code: SWARHERTBL1002a
* Report Description: Diagnosis Data - Roundtable
* Menu Caption: Extracts->RTBL
* Initial release: 
* Developer: David Cottrill
* Report shows: The Health Roundtable Inpatient Diagnosis Code Data Spec
* Modified: 03/11/2015 - mwelsh    - Modified extract to set conditiononset flag.
*           31/03/2016 - rpgladman - Changed ICD code $ZSTRIP from *P (Remove all punctuation - including the period) to
*                                    *W (Remove only whitespace - there shouldn't be any anyway) so S10.55 -> S10.55, not S1055
**************************************************************************************************************************************
</pre>
Class for SWARHERTBL1002a Report]]></Description>
<ProcedureBlock>0</ProcedureBlock>
<Super>Custom.SWARH.Report.ZEN.StoredProc.Abstract</Super>
<TimeCreated>60905,54849</TimeCreated>

<Parameter name="SrcVer">
<Description>
Location and Revision of this file in Perforce (Auto-updating)</Description>
<Default>$Id: //custom_ccrs/au/AUSW/T2016/BASE/cls/Custom/SWARH/Extracts/StoredProc/SWARHERTBL1002a.xml#1 $</Default>
</Parameter>

<Method name="SWARHERTBL1002aClose">
<Description>
This is the Close component of the %Library.Query.
This is standard code and should never have to change.
This is where all the cleanup is performed, i.e. the purging of the temporary storage global ^CacheTemp.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>QHandle:%Library.Binary</FormalSpec>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
 // Clean up by purging the temporary node in ^CacheTemp global
 New repid
 Set repid=$li(QHandle,2)
 Kill ^CacheTemp(repid)
 Quit $$$OK
]]></Implementation>
</Method>

<Method name="SWARHERTBL1002aExecute">
<Description>
This is the Execute section for the %Library.Query. 
All of the logic will be performed here.
A new node for the ^CacheTemp global will be created and each subscript of this global will contain
a row for the report.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&QHandle:%Library.Binary,Hospital:%Integer,DateFrom:%Date,DateTo:%Date]]></FormalSpec>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
	
 k ^zbernard	
 // Get reportid i.e. use $INCREMENT to add another node to ^CacheTemp global. 
 // We use ^CacheTemp global because it will always use memory before disk
 New repid,ind

 // Use $Increment to get the next node
 Set repid=$I(^CacheTemp)
 s ^zBernard("1")=(1)

 // Build data into ^CacheTemp(ReportID)
 // e.g. Set ^CacheTemp(ReportID,Index)=$LB(f1,f2,f3)
 New Number,String,Date,Time,c,n,end
 New PAADMRowID,Deceased,DisCode,MRADMRowID,PAPMINo,PAADMADMNo,PAADMType,PAADMAdmDate,PAADMAdmTime,PAADMDischgDate,PAADMDischgTime,PAADMHospitalDR,HOSPDesc
 New DRGOrder, Prefix, MRCIDCode, MRCIDDesc,patID,ConditionOnsetFlag
 New PrevConditionOnsetFlag,PrevPAADMADMNo
 s (PAADMRowID,MRADMRowID,PAADMHospitalDR,patID)=0
 s (Deceased,DisCode,PAPMINo,PAADMADMNo, PAADMType,PAADMAdmDate,PAADMAdmTime,PAADMDischgDate,PAADMDischgTime,HOSPDesc,CondiftionOnsetFlag)="" 
 s (DRGOrder, Prefix, MRCIDCode, MRCIDDesc,PrevConditionOnsetFlag,PrevPAADMADMNo)=""
 s (end,end2) = 0

  
 s ind=1

 //Convert ODBC dates to cache format
 s DateFrom=$$intdate^SSUTIL4(DateFrom)
 s DateTo=$$intdate^SSUTIL4(DateTo)
 
 //s ^bernard("2")=(2)
 &sql(declare SWARHERTBL1002diag cursor for
  SELECT
 	MRDIA_DRGOrder,
 	CASE MRDIA_Prefix
 		WHEN 'P' THEN 2
 		WHEN 'C' THEN 1
 		WHEN 'A' THEN 2	
 	END,
 	MRDIA_ICDCode_DR->MRCID_Code,
    MRDIA_ICDCode_DR->MRCID_Desc
    INTO	
    :DRGOrder,
    :ConditionOnsetFlag,
    :MRCIDCode,
    :MRCIDDesc
    
 FROM
 	SQLUser.MR_Diagnos WHERE MRDIA_MRADM_ParRef = :patID
 ORDER BY MRDIA_DRGOrder ASC
 )
 
 	&sql(declare SWARHERTBL1002a cursor for
 	SELECT DISTINCT
 		PAADM_RowID,
 		PAADM_PAPMI_DR->PAPMI_PAPER_DR->PAPER_Deceased AS Deceased,
 		PAADM_MainMRADM_DR->MRADM_DischType_DR->CTDSP_Code as DisCode,
 		PAADM_MainMRADM_DR AS MRADMRowID,
  		PAADM_PAPMI_DR->PAPMI_No,
 		PAADM_ADMNo,
    	PAADm_Type,
    	PAADM_AdmDate,
    	PAADM_AdmTime,
    	PAADM_DischgDate,
    	PAADM_DischgTime,
    	PAADM_Hospital_DR,
    	PAADM_Hospital_DR->HOSP_Desc,
    	'' as ConditionOnsetFlag
     	
 	FROM SQLUser.PA_Adm A	
 	 WHERE 
     	PAADM_Hospital_DR = :Hospital
     	AND PAADM_DischgDate >= :DateFrom
     	AND PAADM_DischgDate <= :DateTo	
     	AND PAADM_VisitStatus <> 'C'
     	AND PAADM_Type = 'I'
     	AND NOT(PAADM_CurrentWard_DR->WARD_LocationDR->CTLOC_NATIONCODE IS NULL)
 	)
 	&sql(open SWARHERTBL1002a)
 
  	//fetch first row
 	&sql(fetch SWARHERTBL1002a into :PAADMRowID,:Deceased,:DisCode,:MRADMRowID,:PAPMINo,:PAADMADMNo,:PAADMType,:PAADMAdmDate,
 	:PAADMAdmTime,:PAADMDischgDate,:PAADMDischgTime,:PAADMHospitalDR,:HOSPDesc,:ConditionOnsetFlag)
 	s patID=MRADMRowID
 	
 	s end=0
	
 	while end=0{
 
 	d FormatDates
 	d FormatTimes
 	
 	&sql(open SWARHERTBL1002diag)
 	s end2=0
 	&sql(fetch SWARHERTBL1002diag)
	while end2=0
	{    	
    	If (ConditionOnsetFlag = "") && (PrevPAADMADMNo=PAADMADMNo) {set ConditionOnsetFlag = PrevConditionOnsetFlag}
    	
    	s MRCIDCode=$zstrip(MRCIDCode,"*W") // Changed from *P - rpgladman - 2016-03-31
    
		// build the row
 		Set ^CacheTemp(repid,ind)=$LB(PAADMHospitalDR,PAPMINo,PAADMADMNo,MRCIDCode,ConditionOnsetFlag,DRGOrder)
 		s ind=ind+1
 		s PrevPAADMADMNo=PAADMADMNo
 		s PrevConditionOnsetFlag=ConditionOnsetFlag
 		&sql(fetch SWARHERTBL1002diag)
 		if SQLCODE '= 0 set end2 = 1
	}
	&sql(close SWARHERTBL1002diag)	
 	
 	d Fetchrows
 	}
 	&sql(close SWARHERTBL1002a)
 
 // Build QHandle (AtEnd,ReportID,Index)
 Set QHandle=$lb(0,repid,0)

 Quit $$$OK

Fetchrows
 //fetch rows
 	s PrevPAADMADMNo=PAADMADMNo
 	s PrevConditionOnsetFlag=ConditionOnsetFlag
 	&sql(fetch SWARHERTBL1002a into :PAADMRowID,:Deceased,:DisCode,:MRADMRowID,:PAPMINo,:PAADMADMNo,:PAADMType,:PAADMAdmDate,
 	:PAADMAdmTime,:PAADMDischgDate,:PAADMDischgTime,:PAADMHospitalDR,:HOSPDesc,:ConditionOnsetFlag)
 	
 	s patID=MRADMRowID
 	
 	if SQLCODE '= 0 set end = 1

FormatDates
 // Convert the dates to ODBC date format
 If PAADMAdmDate Set PAADMAdmDate=$ZD(PAADMAdmDate,3)
 If PAADMDischgDate Set PAADMDischgDate=$ZD(PAADMDischgDate,3)
 Quit

FormatTimes
 // Convert the times to ODBC time format
 If PAADMAdmTime Set PAADMAdmTime=$ZT(PAADMAdmTime,1)
 If PAADMDischgTime Set PAADMDischgTime=$ZT(PAADMDischgTime,1)
 Quit
]]></Implementation>
</Method>

<Method name="SWARHERTBL1002aFetch">
<Description>
This is the Fetch component of the %Library.Query. 
This should never have to change. It is designed to fetch the row for each subscript of the ^CacheTemp
global and return this row to the Crystal Report.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&QHandle:%Library.Binary,&Row:%Library.List,&AtEnd:%Library.Integer=0]]></FormalSpec>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
 // This fetch method should never have to change. 

 // repid - Report ID
 // ind   - sequence index which represents each row

 New repid,ind

 // Restore QHandle
 Set AtEnd=$li(QHandle,1)
 Set repid=$li(QHandle,2)
 Set ind=$li(QHandle,3)

 Set ind=$o(^CacheTemp(repid,ind))
 If ind="" {	// if there are no more rows, finish fetching
 Set AtEnd=1
 Set Row=""
 }
 Else      {	// fetch row
 Set Row=^CacheTemp(repid,ind)
 }

 // Save QHandle
 s QHandle=$lb(AtEnd,repid,ind)

 Quit $$$OK
]]></Implementation>
</Method>

<Query name="SWARHERTBL1002a">
<Description>
GHA List reports Stored Procedure
It expects 2 parameter of type date and will return a list of records:
Field1 - Integer
Field2 - String(MAXLEN=255)
Field3 - Date
Field4 - Time 																										</Description>
<Type>%Library.Query</Type>
<FormalSpec>Hospital:%Integer,DateFrom:%Date,DateTo:%Date</FormalSpec>
<SqlProc>1</SqlProc>
<Parameter name="CONTAINID" value="0"/>
<Parameter name="ROWSPEC" value="PAADMHospitalDR:%String,PAPMINo:%String,PAADMADMNo:%String,MRCIDCode:%String,ConditionOnsetFlag:%String,DRGOrder:%String"/>
<Parameter name="SELECTMODE" value="ODBC"/>
</Query>
</Class>
</Export>
