<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Custom.SWARHCUS77RadForm">
<Description>
SWARH Radiology Order Form Report</Description>
<ClassType/>
<ProcedureBlock>0</ProcedureBlock>
<Super>%Library.RegisteredObject</Super>
<TimeCreated>61670,39620.576551</TimeCreated>

<Parameter name="SrcVer">
<Description>
Location and Revision of this file in Perforce (Auto-updating)</Description>
<Default>$Id: //custom_ccrs/au/AUSW/T2016/BASE/cls/Custom/SWARHCUS77RadForm.xml#1 $</Default>
</Parameter>

<Method name="SWARHRadReportClose">
<Description>
This is the Close component of the %Library.Query.
This is standard code and should never have to change.
This is where all the cleanup is performed, i.e. the purging of the temporary storage global ^CacheTemp.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>QHandle:%Library.Binary</FormalSpec>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
 // Clean up by purging the temporary node in ^CacheTemp global
 New repid
 Set repid=$li(QHandle,2)
 Kill ^CacheTemp(repid)
 Quit $$$OK
]]></Implementation>
</Method>

<Method name="SWARHRadReportExecute">
<Description>
This is the Execute section for the %Library.Query. 
All of the logic will be performed here.
A new node for the ^CacheTemp global will be created and each subscript of this global will contain
a row for the report.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&QHandle:%Library.Binary,EpisodeId:%Integer,LabEpisodeNo:%String]]></FormalSpec>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
	
 k ^bernard
 // Get reportid i.e. use $INCREMENT to add another node to ^CacheTemp global. 
 // We use ^CacheTemp global because it will always use memory before disk
 New repid,ind

 // Use $Increment to get the next node
 Set repid=$I(^CacheTemp)

 // Build data into ^CacheTemp(ReportID)
 // e.g. Set ^CacheTemp(ReportID,Index)=$LB(f1,f2,f3)
 New Number,String,Date,Time,c,n,str
 n PAADMRowId,PAADMADMNo,PAADMVisitStatus,WARDCode,HOSPDesc,PAPMIMedicare,PAPMIMedicareCode,PAPMIDVANumber,HOSPPhone,PAPMIRowId,PAPMIDOB,
 INSTCode,HealthFund,PAPMIHealthFundNo,EmpName,EmpStName,EmpCity,EmpZip,EmpPh,MRADMPresentComplaint,PAPMIName,PAPMIName2,PAPMIName3,
 PAPMINo,PAADMType,PAPERStName,PAPERForeignAddress,TriageNurse,CTZIPCode,CTCITDesc,TTLCode,CTSEXCode,TRANSCTPCPDesc,REFDDesc,REFDForename,
 FAMDTTLCode,REFDAddress,FAMDCITY,FAMDZIP,TreatingDoctor,TreatingDocTitle,PAPERRemark,ProviderNo,OEORDADMDR,OEORIRowId,OEORILabEpisodeNo,
 ARCIMCode,ARCIMDesc,OEORIDepProcNotes,OEORIsttDat,OEORIsttTim,OEORIDate,OEORITimeOrd,SSUSRRegistrationNumber,SSUSRTTLCode,CTPCPDesc,
 OSTATCode,OEORIRemarks,CTLOCDesc,OEORIRowId,QuesCode
 s (PAADMRowId,PAPMIRowId,OEORIRowId,OEORDADMDR,QuesCode)=0
 s (PAADMADMNo,PAADMVisitStatus,WARDCode,HOSPDesc,PAPMIMedicare,PAPMIMedicareCode,PAPMIDVANumber,HOSPPhone,PAPMIDOB,
 INSTCode,HealthFund,PAPMIHealthFundNo,EmpName,EmpStName,EmpCity,EmpZip,EmpPh,MRADMPresentComplaint,PAPMIName,PAPMIName2,PAPMIName3,
 PAPMINo,PAADMType,PAPERStName,PAPERForeignAddress,TriageNurse,CTZIPCode,CTCITDesc,TTLCode,CTSEXCode,REFDDesc,REFDForename,FAMDTTLCode,
 REFDAddress,FAMDCITY,FAMDZIP,TreatingDoctor,TreatingDocTitle,PAPERRemark,ProviderNo,OEORILabEpisodeNo,ARCIMCode,ARCIMDesc,
 OEORIDepProcNotes,OEORIsttDat,OEORIsttTim,SSUSRRegistrationNumber,CTPCPDesc,OEORISttDat,OEORISttTim,OEORIDate,OEORITimeOrd,
 OSTATCode,OEORIRemarks,CTLOCDesc,OEORIRowId)=""
 s ind=1

 &sql(select
 PAADM_RowID, 
 PAADM_ADMNo,
 PAADM_VisitStatus,
 PAADM_CurrentWard_DR->WARD_Code,
 PAADM_CurrentWard_DR->WARD_LocationDR->CTLOC_Hospital_DR->HOSP_Desc,
 PAPMI_Medicare,
 PAPMI_MedicareCode,
 PAPMI_DVANumber,
 PAADM_CurrentWard_DR->WARD_LocationDR->CTLOC_Hospital_DR->HOSP_Phone,
 PAPMI_RowId,
 PAPMI_DOB,
 INS_InsType_DR->INST_Desc,
 PAPMI_PAPER_DR->PAPER_InsType_DR->INST_Desc,
 PAPMI_HealthFundNo,
 CONT_Name,CONT_address1,CONT_City_DR->CTCIT_Desc,CONT_Zip_DR->CTZIP_Code,CONT_Phone,
 PAADM_MainMRADM_DR->MRADM_PresentComplaint, 
 PAPMI_Name, 
 PAPMI_Name2,
 PAPMI_Name3,
 PAPMI_No, 
 PAADM_Type,
 PAPMI_PAPER_DR->PAPER_StName,
 PAPMI_PAPER_DR->PAPER_ForeignAddress,
 PAADM_TriageNurse_DR->CTPCP_Desc as TriageNurse,
 PAPMI_PAPER_DR->PAPER_Zip_DR->CTZIP_Code, 
 PAPMI_PAPER_DR->PAPER_CityCode_DR->CTCIT_Desc,
 PAPMI_PAPER_DR->PAPER_Title_DR->TTL_Code,
 PAPMI_PAPER_DR->PAPER_Sex_DR->CTSEX_Code,
 PAPMI_PAPER_DR->PAPER_FamilyDoctor_DR->REFD_Desc,
 PAPMI_PAPER_DR->PAPER_FamilyDoctor_DR->REFD_Forename,
 PAPMI_PAPER_DR->PAPER_FamilyDoctor_DR->REFD_Title_DR->TTL_Code as FAMDTTLCode,
 PAPMI_PAPER_DR->PAPER_FamilyDoctor_DR->REFD_Address,
 PAPMI_PAPER_DR->PAPER_FamilyDoctor_DR->REFD_City_DR->CTCIT_Desc as FAMDCITY,
 PAPMI_PAPER_DR->PAPER_FamilyDoctor_DR->REFD_ctZIP_DR->CTZIP_Code AS FAMDZIP,
 TRANS_CTCP_DR->CTPCP_Desc as TreatingDoctor,
 TRANS_CTCP_DR->CTPCP_Title_DR->TTL_Code as TreatingDocTitle,
 PAPMI_PAPER_DR->PAPER_Remark,
 SSUSR_RegistrationNumber
 INTO :PAADMRowId,:PAADMADMNo,:PAADMVisitStatus,:WARDCode,:HOSPDesc,:PAPMIMedicare,
:PAPMIMedicareCode,:PAPMIDVANumber,:HOSPPhone,:PAPMIRowId,:PAPMIDOB,:INSTCode,
:HealthFund,:PAPMIHealthFundNo,
:EmpName,:EmpStName,:EmpCity,:EmpZip,:EmpPh,
:MRADMPresentComplaint,:PAPMIName,:PAPMIName2,:PAPMIName3,
:PAPMINo,:PAADMType,:PAPERStName,:PAPERForeignAddress,:TriageNurse,
:CTZIPCode,:CTCITDesc,:TTLCode,:CTSEXCode,:REFDDesc,:REFDForename,:TTLCode,
:REFDAddress,:FAMDCITY,:FAMDZIP,:TreatingDoctor,:TreatingDocTitle,:PAPERRemark,
:ProviderNo
 FROM sqluser.PA_Adm, sqluser.PA_PatMas,sqluser.PA_AdmInsurance,
 sqluser.PA_AdmTransaction,sqluser.SS_User,sqluser.PA_TrafficAccidentContact
 WHERE PAADM_PAPMI_DR=PAPMI_RowId AND PAADM_RowId=*INS_ParRef and 
 PAADM_RowId =:EpisodeId and 
 PAADM_RowId=TRANS_ParRef and TRANS_TransType_DR=3 and CONT_DateTo is NULL 
 and PAADM_TrafficAccident_DR=*CONT_ParRef
 
 order by TRANS_Childsub desc 
 )
 Do FormatDates
 Do FormatTimes

 if PAPERStName'="" s PAPERStName=$LISTTOSTRING(PAPERStName)
 if EmpStName'="" s EmpStName=$ZSTRIP(EmpStName,"*C")
 if PAPERRemark'="" s PAPERRemark=$LISTTOSTRING(PAPERRemark)
 if REFDAddress'="" s REFDAddress=$LISTTOSTRING(REFDAddress)

 //new select to declare cursor
 &sql(declare SWARHRadReport cursor for 
 select distinct
 OEORD_ADM_DR,
 OEORI_RowId,
 OEORI_LabEpisodeNo, 
 OEORI_ItmMast_DR->ARCIM_Code, 
 OEORI_ItmMast_DR->ARCIM_Desc,
 substr(OEORI_DepProcNotes,2),
 SSUSR_RegistrationNumber,
 SSUSR_Title_DR->TTL_Code as SSUSRTTLCode,
 OEORI_Doctor_DR->CTPCP_Desc,
 OEORI_SttDat, 
 OEORI_SttTim, 
 OEORI_Date,
 OEORI_TimeOrd,
 OEORI_ItemStat_DR->OSTAT_Code, 
 OEORI_Remarks,
 OEORI_RecDep_DR->CTLOC_Desc,
 OEORI_RowId,
 QA_Question_DR->Ques_Desc,
 QA_Answer,
 QA_Question_DR->Ques_Code
 FROM	sqluser.OE_Order, sqluser.OE_OrdItem, 
 sqlUser.ARC_ItmRecLoc, sqlUser.SS_User, sqluser.OE_OrdQuestion
 where OEORD_RowId=OEORI_OEORD_ParRef
 and OEORI_RowId=QA_ParRef
 and OEORI_LabEpisodeNo=:LabEpisodeNo and OEORD_ADM_DR=:EpisodeId
 and OEORI_Doctor_DR=*SSUSR_CTPCP_DR)
 
 &sql(open  SWARHRadReport)

 // build the row
 Set str=$LB(PAADMRowId,PAADMADMNo,PAADMVisitStatus,WARDCode,HOSPDesc,PAPMIMedicare,PAPMIMedicareCode,PAPMIDVANumber,HOSPPhone,PAPMIRowId,PAPMIDOB,INSTCode,HealthFund,PAPMIHealthFundNo,EmpName,EmpStName,EmpCity,EmpZip,EmpPh,MRADMPresentComplaint,PAPMIName,PAPMIName2,PAPMIName3,PAPMINo,PAADMType,PAPERStName,PAPERForeignAddress,TriageNurse,CTZIPCode,CTCITDesc,TTLCode,CTSEXCode,REFDDesc,REFDForename,FAMDTTLCode,REFDAddress,FAMDCITY,FAMDZIP,TreatingDoctor,TreatingDocTitle,PAPERRemark,ProviderNo)

 //fetch first order record
 &sql(fetch SWARHRadReport into :OEORDADMDR,:OEORIRowId,:OEORILabEpisodeNo,:ARCIMCode,:ARCIMDesc,:OEORIDepProcNotes,:SSUSRRegistrationNumber,:SSUSRTTLCode,:CTPCPDesc,:OEORISttDat,:OEORISttTim,:OEORIDate,:OEORITimeOrd,:OSTATCode,:OEORIRemarks,:CTLOCDesc,:OEORIRowId,:QUESDesc,:QAAnswer,:QuesCode)

 while 'SQLCODE{

 s OEORIDepProcNotes=$zstrip(OEORIDepProcNotes,"<A")	 
 s OEORIDepProcNotes=$zstrip(OEORIDepProcNotes,"*C")
 s OEORIRemarks=$zstrip(OEORIRemarks,"*C")

 Do FormatDates
 Do FormatTimes

 set strNEWOP=$LB(OEORDADMDR,OEORIRowId,OEORILabEpisodeNo,ARCIMCode,ARCIMDesc,OEORIDepProcNotes,SSUSRRegistrationNumber,SSUSRTTLCode,CTPCPDesc,OEORISttDat,OEORISttTim,OEORIDate,OEORITimeOrd,OSTATCode,OEORIRemarks,CTLOCDesc,OEORIRowId,QUESDesc,QAAnswer,QuesCode)

 Set ^CacheTemp(repid,ind)=str_strNEWOP
 s ind=ind+1
 //fetch next order records
 &sql(fetch SWARHRadReport into :OEORDADMDR,:OEORIRowId,:OEORILabEpisodeNo,:ARCIMCode,:ARCIMDesc,:OEORIDepProcNotes,:SSUSRRegistrationNumber,:SSUSRTTLCode,:CTPCPDesc,:OEORISttDat,:OEORISttTim,:OEORIDate,:OEORITimeOrd,:OSTATCode,:OEORIRemarks,:CTLOCDesc,:OEORIRowId,:QUESDesc,:QAAnswer,:QuesCode)
}

 Do FormatDates
 Do FormatTimes

 &sql(close SWARHRadReport)

 // Build QHandle (AtEnd,ReportID,Index)
 Set QHandle=$lb(0,repid,0)

 Quit $$$OK

FormatDates
 // Convert the dates to ODBC date format
 If PAPMIDOB Set PAPMIDOB=$ZD(PAPMIDOB,3)
 If OEORISttDat Set OEORISttDat=$ZD(OEORISttDat,3)
 If OEORIDate Set OEORIDate=$ZD(OEORIDate,3)
 Quit

FormatTimes
 // Convert the times to ODBC time format
 If OEORISttTim Set OEORISttTim=$ZT(OEORISttTim,2)
 If OEORITimeOrd Set OEORITimeOrd=$ZT(OEORITimeOrd,2)
 Quit
]]></Implementation>
</Method>

<Method name="SWARHRadReportFetch">
<Description>
This is the Fetch component of the %Library.Query. 
This should never have to change. It is designed to fetch the row for each subscript of the ^CacheTemp
global and return this row to the Crystal Report.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&QHandle:%Library.Binary,&Row:%Library.List,&AtEnd:%Library.Integer=0]]></FormalSpec>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
 // This fetch method should never have to change. 

 // repid - Report ID
 // ind   - sequence index which represents each row

 New repid,ind

 // Restore QHandle
 Set AtEnd=$li(QHandle,1)
 Set repid=$li(QHandle,2)
 Set ind=$li(QHandle,3)

 Set ind=$o(^CacheTemp(repid,ind))
 If ind="" {	// if there are no more rows, finish fetching
 Set AtEnd=1
 Set Row=""
 }
 Else      {	// fetch row
 Set Row=^CacheTemp(repid,ind)
 }

 // Save QHandle
 s QHandle=$lb(AtEnd,repid,ind)
 Quit $$$OK
]]></Implementation>
</Method>

<Query name="SWARHRadReport">
<Description>
Vic Triage Report
It expects 1 parameter of type integer and will return 40 odd fields:
Field1 - Integer
Field2 - String(MAXLEN=255)
Field3 - Date
Field4 - Time</Description>
<Type>%Library.Query</Type>
<FormalSpec>EpisodeId:%Integer,LabEpisodeNo:%String</FormalSpec>
<SqlProc>1</SqlProc>
<Parameter name="CONTAINID" value="0"/>
<Parameter name="ROWSPEC" value="PAADMRowId: %Integer,PAADMADMNo:%String(MAXLEN=255),PAADMVisitStatus:%String(MAXLEN=255),WARDCode:%String(MAXLEN=255),HOSPDesc:%String(MAXLEN=255),PAPMIMedicare:%String(MAXLEN=255),PAPMIMedicareCode:%String(MAXLEN=255),PAPMIDVANumber:%String(MAXLEN=255),HOSPPhone:%String(MAXLEN=255),PAPMIRowId:%Integer,PAPMIDOB:%Date,INSTCode:%String(MAXLEN=255),HealthFund:%String(MAXLEN=255),PAPMIHealthFundNo:%String(MAXLEN=255),EmpName:%String(MAXLEN=255),EmpStName:%String(MAXLEN=255),EmpCity:%String(MAXLEN=255),EmpZip:%String(MAXLEN=255),EmpPh:%String(MAXLEN=255),MRADMPresentComplaint:%String(MAXLEN=255),PAPMIName:%String(MAXLEN=255),PAPMIName2:%String(MAXLEN=255),PAPMIName3:%String(MAXLEN=255),PAPMINo:%String(MAXLEN=255),PAADMType:%String(MAXLEN=255),PAPERStName:%String(MAXLEN=255),PAPERForeignAddress:%String(MAXLEN=255),TriageNurse:%String(MAXLEN=255),CTZIPCode:%String(MAXLEN=255),CTCITDesc:%String(MAXLEN=255),TTLCode:%String(MAXLEN=255),CTSEXCode:%String(MAXLEN=255),REFDDesc:%String(MAXLEN=255),REFDForename:%String(MAXLEN=255),FAMDTTLCode:%String(MAXLEN=255),REFDAddress:%String(MAXLEN=255),FAMDCITY:%String(MAXLEN=255),FAMDZIP:%String(MAXLEN=255),TreatingDoctor:%String(MAXLEN=255),TreatingDocTitle:%String(MAXLEN=255),PAPERRemark:%String(MAXLEN=255),ProviderNo:%String(MAXLEN=255),OEORDADMDR:%Integer,OEORIRowId:%Integer,OEORILabEpisodeNo:%String(MAXLEN=255),ARCIMCode:%String(MAXLEN=255),ARCIMDesc:%String(MAXLEN=255),OEORIDepProcNotes:%String(MAXLEN=4097),SSUSRRegistrationNumber:%String(MAXLEN=255),SSUSRTTLCode:%String(MAXLEN=255),CTPCPDesc:%String(MAXLEN=255),OEORISttDat:%Date,OEORISttTim:%String(MAXLEN=255),OEORIDate:%Date,OEORITimeOrd:%String(MAXLEN=255),OSTATCode:%String(MAXLEN=255),OEORIRemarks:%String(MAXLEN=255),CTLOCDesc:%String(MAXLEN=255),OEORIRowId:%String(MAXLEN=255),QUESDesc:%String(MAXLEN=255),QAAnswer:%String(MAXLEN=255),QuesCode:%String(MAXLEN=255)"/>
<Parameter name="SELECTMODE" value="ODBC"/>
</Query>
</Class>
</Export>
