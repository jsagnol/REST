<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Custom.VICEDTRAK024">
<Description>
Vic Triage Report</Description>
<ClassType/>
<ProcedureBlock>0</ProcedureBlock>
<Super>%Library.RegisteredObject</Super>
<TimeCreated>60200,47139.426676</TimeCreated>

<Method name="IncompleteCheckerClose">
<Description>
This is the Close component of the %Library.Query.
This is standard code and should never have to change.
This is where all the cleanup is performed, i.e. the purging of the temporary storage global ^CacheTemp.</Description>
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>QHandle:%Library.Binary</FormalSpec>
<Private>0</Private>
<ReturnType>%Library.Status</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 // Clean up by purging the temporary node in ^CacheTemp global
 New repid
 Set repid=$li(QHandle,2)
 Kill ^CacheTemp(repid)
 Quit $$$OK
]]></Implementation>
</Method>

<Method name="IncompleteCheckerExecute">
<Description>
This is the Execute section for the %Library.Query. 
All of the logic will be performed here.
A new node for the ^CacheTemp global will be created and each subscript of this global will contain
a row for the report.</Description>
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec><![CDATA[&QHandle:%Library.Binary,DateFrom:%Date,DateTo:%Date,Hospital:%Integer]]></FormalSpec>
<Private>0</Private>
<ReturnType>%Library.Status</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
	
 k ^bernard
 // Get reportid i.e. use $INCREMENT to add another node to ^CacheTemp global. 
 // We use ^CacheTemp global because it will always use memory before disk
 New repid,ind

 // Use $Increment to get the next node
 Set repid=$I(^CacheTemp)

 // Build data into ^CacheTemp(ReportID)
 // e.g. Set ^CacheTemp(ReportID,Index)=$LB(f1,f2,f3)
 New Number,String,Date,Time,c,n,str
 n PAADMRowId,MRADMRowId,PAADMADMNo,PAADMAdmDate,PAADMAdmTime,PAADMSeenDate,PAADMSeenTime,WARDCode,HOSPRowId,HOSPDesc,VSTCode,PAADMTriageDate,PAADMTriageTime,CTACUCode,DSCLCode,TRANSMDesc,PAPMIDOB,PAPMIName,PAPMIName2,PAPMINo,PAPERStName,CTMARCode,CTRLGDesc,CTZIPCode,CTCITDesc,TTLCode,CTSEXCode,REFDDesc,PREFLDesc,CTCOUDesc,PAPMIMedicare,PAPMIMedicareCode,MEDSUFDesc,INDSTDesc,CTRFCCode,DISCONCode,ReferredBy,TRDCode,RETRACode,PAADMVisitStatus,TRANSPCode,USACCDesc,PAPMIDVANumber,PAPERInterpreterRequired,MRADMGPConsent,ACTINJDesc,HUMINTDesc,INJUDesc,PLINJDesc,MRADMInjuryDesc,MRADMTransDest2DR,REFDEPDesc,ECSCDesc,INSTCode,MRCIDCode
 s (PAADMRowId,HOSPRowId,MRADMRowId)=0
 s (PAADMADMNo,PAADMAdmDate,PAADMAdmTime,PAADMSeenDate,PAADMSeenTime,WARDCode,HOSPDesc,VSTCode,PAADMTriageDate,PAADMTriageTime,CTACUCode,DSCLCode,TRANSMDesc,PAPMIDOB,PAPMIName,PAPMIName2,PAPMINo,PAPERStName,CTMARCode,CTRLGDesc,CTZIPCode,CTCITDesc,TTLCode,CTSEXCode,REFDDesc,PREFLDesc,CTCOUDesc,PAPMIMedicare,PAPMIMedicareCode,MEDSUFDesc,INDSTDesc,CTRFCCode,DISCONCode,ReferredBy,TRDCode,RETRACode,PAADMVisitStatus,TRANSPCode,USACCDesc,PAPMIDVANumber,PAPERInterpreterRequired,MRADMGPConsent,ACTINJDesc,HUMINTDesc,INJUDesc,PLINJDesc,MRADMInjuryDesc,MRADMTransDest2DR,REFDEPDesc,ECSCDesc,INSTCode,MRCIDCode)=""
 s ^zbernard("1")=1
 s ind=1
 s ^zbernard("2")=2

 //Convert ODBC dates to cache format
 s DateFrom=$$intdate^SSUTIL4(DateFrom)
 s DateTo=$$intdate^SSUTIL4(DateTo)


 &sql(declare IncompleteChecker cursor for
 SELECT
 PAADM_RowId,
 PAADM_MainMRADM_DR->MRADM_RowId,
 PAADM_ADMNo,
 PAADM_AdmDate,
 PAADM_AdmTime,
 PAADM_SeenDate,
 PAADM_SeenTime,
 PAADM_CurrentWard_DR->WARD_Code,
 PAADM_CurrentWard_DR->WARD_LocationDR->CTLOC_Hospital_DR,
 PAADM_CurrentWard_DR->WARD_LocationDR->CTLOC_Hospital_DR->HOSP_Desc,
 PAADM_MainMRADM_DR->MRADM_VisitType_DR->VST_Code,
 PAADM_TriageDate,
 PAADM_TriageTime,
 PAADM_Priority_DR->CTACU_Code,
 PAADM_MainMRADM_DR->MRADM_DischClassif_DR->DSCL_Code,
 PAADM_MainMRADM_DR->MRADM_TransferMeans_DR->TRANSM_Desc,
 PAPMI_DOB,
 PAPMI_Name, 
 PAPMI_Name2,
 PAPMI_No, 
 PAPMI_PAPER_DR->PAPER_StName,
 PAPMI_PAPER_DR->PAPER_Marital_DR->CTMAR_Code,
 PAPMI_PAPER_DR->PAPER_Religion_DR->CTRLG_Desc,
 PAPMI_PAPER_DR->PAPER_Zip_DR->CTZIP_Code, 
 PAPMI_PAPER_DR->PAPER_CityCode_DR->CTCIT_Desc,
 PAPMI_PAPER_DR->PAPER_Title_DR->TTL_Code,
 PAPMI_PAPER_DR->PAPER_Sex_DR->CTSEX_Code,
 PAPMI_PAPER_DR->PAPER_FamilyDoctor_DR->REFD_Desc,
 PAPMI_PAPER_DR->PAPER_PrefLanguage_DR->PREFL_Desc,
 PAPMI_PAPER_DR->PAPER_Country_Birth_DR->CTCOU_Desc,
 PAPMI_Medicare,
 PAPMI_MedicareCode,
 PAPMI_MedicareSuffix_DR->MEDSUF_Desc,
 PAPMI_PAPER_DR->PAPER_IndigStat_DR->INDST_Desc,
 PAADM_RefClinTo_dr->CTRFC_Code,
 PAADM_MainMRADM_DR->MRADM_ConditatDisch_DR->DISCON_Code,
 PAADM_RefClinic_DR as ReferredBy,
 PAADM_MainMRADM_DR->MRADM_TransfDest_DR->TRD_Code,
 PAADM_MainMRADM_DR->MRADM_ReasonTransfer_DR->RETRA_Code,
 PAADM_VisitStatus,
 PAADM_MainMRADM_DR->MRADM_DischTransport_DR->TRANSP_Code,
 PAADM_UsualAccom_dr->USACC_Desc,
 PAPMI_DVANumber,
 PAPMI_PAPER_DR->PAPER_InterpreterRequired,
 PAADM_MainMRADM_DR->MRADM_GPConsent,
 PAADM_ActivityInjured_DR->ACTINJ_Desc,
 PAADM_HumanIntent_DR->HUMINT_Desc,
 PAADM_CauseInj_DR->INJU_Desc,
 PAADM_PlaceOfInj_DR->PLINJ_Desc,
 PAADM_MainMRADM_DR->MRADM_InjuryDesc,
 PAADM_MainMRADM_DR->MRADM_TransDest2_DR,
 PAADM_MainMRADM_DR->MRADM_ReferredTo_DR->REFDEP_Desc,
 PAADM_MainMRADM_DR->MRADM_EscortSource_DR->ESCS_Desc
 FROM sqluser.PA_Adm, sqluser.PA_PatMas
 WHERE PAADM_PAPMI_DR=PAPMI_RowId AND 
 PAADM_DischgDate between :DateFrom and :DateTo and
 PAADM_CurrentWard_DR->WARD_LocationDR->CTLOC_Hospital_DR=:Hospital and 
 PAADM_Type='E' and PAADM_VisitStatus='d' and 
 PAADM_Completed='N'
 )
 s ^zbernard("3")=3

 &sql(open IncompleteChecker)

 //fetch first row
 &sql(fetch IncompleteChecker into :PAADMRowId,:MRADMRowId,:PAADMADMNo,:PAADMAdmDate,:PAADMAdmTime,:PAADMSeenDate,:PAADMSeenTime,:WARDCode,:HOSPRowId,:HOSPDesc,:VSTCode,:PAADMTriageDate,:PAADMTriageTime,:CTACUCode,:DSCLCode,:TRANSMDesc,:PAPMIDOB,:PAPMIName,:PAPMIName2,:PAPMINo,:PAPERStName,:CTMARCode,:CTRLGDesc,:CTZIPCode,:CTCITDesc,:TTLCode,:CTSEXCode,:REFDDesc,:PREFLDesc,:CTCOUDesc,:PAPMIMedicare,:PAPMIMedicareCode,:MEDSUFDesc,:INDSTDesc,:CTRFCCode,:DISCONCode,:ReferredBy,:TRDCode,:RETRACode,:PAADMVisitStatus,:TRANSPCode,:USACCDesc,:PAPMIDVANumber,:PAPERInterpreterRequired,:MRADMGPConsent,:ACTINJDesc,:HUMINTDesc,:INJUDesc,:PLINJDesc,:MRADMInjuryDesc,:MRADMTransDest2DR,:REFDEPDesc,:ECSCDesc)

 while 'SQLCODE{
 d FormatDates
 d FormatTimes
 s PAPERStName=$zstrip(PAPERStName,"*C")

 ;get CurrentPayor
 s INSTCode=##class(Custom.BHUtilities).GetCurrentPayor(PAADMRowId)

 ;get 1st ICD in set
 s MRCIDCode=##class(Custom.BHUtilities).GetPrincipalICD(MRADMRowId)

 // build the row
 Set ^CacheTemp(repid,ind)=$LB(PAADMRowId,MRADMRowId,PAADMADMNo,PAADMAdmDate,PAADMAdmTime,PAADMSeenDate,PAADMSeenTime,WARDCode,HOSPRowId,HOSPDesc,VSTCode,PAADMTriageDate,PAADMTriageTime,CTACUCode,DSCLCode,TRANSMDesc,PAPMIDOB,PAPMIName,PAPMIName2,PAPMINo,PAPERStName,CTMARCode,CTRLGDesc,CTZIPCode,CTCITDesc,TTLCode,CTSEXCode,REFDDesc,PREFLDesc,CTCOUDesc,PAPMIMedicare,PAPMIMedicareCode,MEDSUFDesc,INDSTDesc,CTRFCCode,DISCONCode,ReferredBy,TRDCode,RETRACode,PAADMVisitStatus,TRANSPCode,USACCDesc,PAPMIDVANumber,PAPERInterpreterRequired,MRADMGPConsent,ACTINJDesc,HUMINTDesc,INJUDesc,PLINJDesc,MRADMInjuryDesc,MRADMTransDest2DR,REFDEPDesc,ECSCDesc,INSTCode,MRCIDCode)
 s ind=ind+1
 //fetch rows
 &sql(fetch IncompleteChecker into :PAADMRowId,:MRADMRowId,:PAADMADMNo,:PAADMAdmDate,:PAADMAdmTime,:PAADMSeenDate,:PAADMSeenTime,:WARDCode,:HOSPRowId,:HOSPDesc,:VSTCode,:PAADMTriageDate,:PAADMTriageTime,:CTACUCode,:DSCLCode,:TRANSMDesc,:PAPMIDOB,:PAPMIName,:PAPMIName2,:PAPMINo,:PAPERStName,:CTMARCode,:CTRLGDesc,:CTZIPCode,:CTCITDesc,:TTLCode,:CTSEXCode,:REFDDesc,:PREFLDesc,:CTCOUDesc,:PAPMIMedicare,:PAPMIMedicareCode,:MEDSUFDesc,:INDSTDesc,:CTRFCCode,:DISCONCode,:ReferredBy,:TRDCode,:RETRACode,:PAADMVisitStatus,:TRANSPCode,:USACCDesc,:PAPMIDVANumber,:PAPERInterpreterRequired,:MRADMGPConsent,:ACTINJDesc,:HUMINTDesc,:INJUDesc,:PLINJDesc,:MRADMInjuryDesc,:MRADMTransDest2DR,:REFDEPDesc,:ECSCDesc)
 }

 //s ^zBernard("3")=(3)
 &sql(close IncompleteChecker)

 // Build QHandle (AtEnd,ReportID,Index)
 Set QHandle=$lb(0,repid,0)

 //s ^zBernard("4")=(4)
 Quit $$$OK

FormatDates
 // Convert the dates to ODBC date format
 If PAADMAdmDate Set PAADMAdmDate=$ZD(PAADMAdmDate,3)
 If PAPMIDOB Set PAPMIDOB=$ZD(PAPMIDOB,3)
 If PAADMTriageDate Set PAADMTriageDate=$ZD(PAADMTriageDate,3)
 If PAADMSeenDate Set PAADMSeenDate=$ZD(PAADMSeenDate,3)
 Quit

FormatTimes
 // Convert the times to ODBC time format
 If PAADMTriageTime Set PAADMTriageTime=$ZT(PAADMTriageTime,2)
 If PAADMAdmTime Set PAADMAdmTime=$ZT(PAADMAdmTime,2)
 If PAADMSeenTime Set PAADMSeenTime=$ZT(PAADMSeenTime,2)
 Quit
]]></Implementation>
</Method>

<Method name="IncompleteCheckerFetch">
<Description>
This is the Fetch component of the %Library.Query. 
This should never have to change. It is designed to fetch the row for each subscript of the ^CacheTemp
global and return this row to the Crystal Report.</Description>
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec><![CDATA[&QHandle:%Library.Binary,&Row:%Library.List,&AtEnd:%Library.Integer=0]]></FormalSpec>
<Private>0</Private>
<ReturnType>%Library.Status</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 // This fetch method should never have to change. 

 // repid - Report ID
 // ind   - sequence index which represents each row

 New repid,ind

 // Restore QHandle
 Set AtEnd=$li(QHandle,1)
 Set repid=$li(QHandle,2)
 Set ind=$li(QHandle,3)

 Set ind=$o(^CacheTemp(repid,ind))
 If ind="" {	// if there are no more rows, finish fetching
 Set AtEnd=1
 Set Row=""
 }
 Else      {	// fetch row
 Set Row=^CacheTemp(repid,ind)
 }

 // Save QHandle
 s QHandle=$lb(AtEnd,repid,ind)
 Quit $$$OK
]]></Implementation>
</Method>

<Query name="IncompleteChecker">
<Description>
Vic Triage Report
It expects 1 parameter of type integer and will return 40 odd fields:
Field1 - Integer
Field2 - String(MAXLEN=255)
Field3 - Date
Field4 - Time</Description>
<Type>%Library.Query</Type>
<FormalSpec>DateFrom:%Date,DateTo:%Date,Hospital:%Integer</FormalSpec>
<SqlProc>1</SqlProc>
<SqlView>0</SqlView>
<Parameter name="CONTAINID" value="0"/>
<Parameter name="ROWSPEC" value="PAADMRowId:%Integer,MRADMRowId:%Integer,PAADMADMNo:%String(MAXLEN=255),PAADMAdmDate:%Date,PAADMAdmTime:%String(MAXLEN=255),PAADMSeenDate:%Date,PAADMSeenTime:%String(MAXLEN=255),WARDCode:%String(MAXLEN=255),HOSPRowId:%Integer,HOSPDesc:%String(MAXLEN=255),VSTCode:%String(MAXLEN=255),PAADMTriageDate:%Date,PAADMTriageTime:%String(MAXLEN=255),CTACUCode:%String(MAXLEN=255),DSCLCode:%String(MAXLEN=255),TRANSMDesc:%String(MAXLEN=255),PAPMIDOB:%Date,PAPMIName:%String(MAXLEN=255),PAPMIName2:%String(MAXLEN=255),PAPMINo:%String(MAXLEN=255),PAPERStName:%String(MAXLEN=255),CTMARCode:%String(MAXLEN=255),CTRLGDesc:%String(MAXLEN=255),CTZIPCode:%String(MAXLEN=255),CTCITDesc:%String(MAXLEN=255),TTLCode:%String(MAXLEN=255),CTSEXCode:%String(MAXLEN=255),REFDDesc:%String(MAXLEN=255),PREFLDesc:%String(MAXLEN=255),CTCOUDesc:%String(MAXLEN=255),PAPMIMedicare:%String(MAXLEN=255),PAPMIMedicareCode:%String(MAXLEN=255),MEDSUFDesc:%String(MAXLEN=255),INDSTDesc:%String(MAXLEN=255),CTRFCCode:%String(MAXLEN=255),DISCONCode:%String(MAXLEN=255),ReferredBy:%String(MAXLEN=255),TRDCode:%String(MAXLEN=255),RETRACode:%String(MAXLEN=255),PAADMVisitStatus:%String(MAXLEN=255),TRANSPCode:%String(MAXLEN=255),USACCDesc:%String(MAXLEN=255),PAPMIDVANumber:%String(MAXLEN=255),PAPERInterpreterRequired:%String(MAXLEN=255),MRADMGPConsent:%String(MAXLEN=255),ACTINJDesc:%String(MAXLEN=255),HUMINTDesc:%String(MAXLEN=255),INJUDesc:%String(MAXLEN=255),PLINJDesc:%String(MAXLEN=255),MRADMInjuryDesc:%String(MAXLEN=255),MRADMTransDest2DR:%String(MAXLEN=255),REFDEPDesc:%String(MAXLEN=255),ECSCDesc:%String(MAXLEN=255),INSTCode:%String(MAXLEN=255),MRCIDCode:%String(MAXLEN=255)"/>
<Parameter name="SELECTMODE" value="ODBC"/>
</Query>
</Class>
</Export>
